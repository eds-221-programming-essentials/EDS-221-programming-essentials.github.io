---
title: "Day 6: Tasks & activities - KEY"
subtitle: "Tidying & subsetting with `tidyr` and `dplyr`"
editor_options: 
  chunk_output_type: console
---

## Data wrangling of SBC LTER lobster data

1. Write organized and well-annotated code to do the following:
  - Read in and take a look at the data in the `data/Lobster_Abundance_All_Years_20210412.csv` file
  - Update your import line to convert NA values
  - Convert column names to lower snake case
  - Convert the data from frequency to case format using `dplyr::uncount()` on the existing count column
  - Add annotation in your code explaining `dplyr::uncount()`

```{r}
#| include: false
library(tidyverse)
```

::: {.callout-important}
## Solution
```{r}
#| include: false
lobsters <- read_csv(here::here("course-materials", "eod-practice", "data","Lobster_Abundance_All_Years_20210412.csv"), na = c("-99999", "")) |> 
  janitor::clean_names() |> 
  uncount(count)
```

```{r}
#| eval: false
lobsters <- read_csv(here("data","Lobster_Abundance_All_Years_20210412.csv"), na = c("-99999", "")) |> 
  janitor::clean_names() |> 
  uncount(count)
```
:::

2.Create a summary table that finds the total counts (see: `n()`), and mean carapace lengths of lobsters observed in the dataset by **site** and **year**

::: {.callout-important}
## Solution
```{r}
lobster_summary <- lobsters |>  
  group_by(site, year) |> 
  summarize(mean_size_mm = mean(size_mm, na.rm = TRUE),
            sample_size = n())
```
:::

3. Create a ggplot graph of the number of total lobsters observed (y-axis) by year (x-axis) in the study, grouped (either aesthetically or by faceting) by site

::: {.callout-important}
## Solution
```{r}
ggplot(data = lobster_summary, aes(x = year, y = sample_size)) +
  geom_line(aes(color = site)) +
  theme_minimal()
```
:::

4. Find the proportion of legal lobsters at each site for 2020. The legal lobster size (carapace length) in California is 79.76 mm.
  - Create a subset that only contains lobster data from 2020
  - Write code to find the counts of lobsters observed at each site (only using site as the grouping factor) that are above and below the legal limit
  - Create a stacked column graph that shows the *proportion* of legal and non-legal lobsters at each site
  
::: {.callout-important}
## Solution
```{r}
lobsters_legal <- lobsters |> 
  filter(year == 2020) |>  
  mutate(legal = case_when(
    size_mm > 79.76 ~ "yes",
    size_mm <= 79.76 ~ "no"
   ))

lobsters_n_legal <- lobsters_legal |>  
  count(site, legal) |> 
  drop_na(legal)
```

```{r}
ggplot(data = lobsters_n_legal, aes(x = site, y = n)) +
  geom_col(aes(fill = legal), position = "fill")
```
:::

5. Create and store a subset that only contains lobsters from sites "IVEE", "CARP" and "NAPL". Check your output data frame to ensure that only those three sites exist. 

::: {.callout-important}
## Solution
```{r}
lobster_3sites <- lobsters |>
  filter(
    site %in% c("IVEE", "CARP", "NAPL")
    )

unique(lobster_3sites$site)
```
:::

6. Create a subset that only contains lobsters observed in August

::: {.callout-important}
## Solution
```{r}
lobsters_august <- lobsters |> 
  filter(month == 8)
```
:::

7. Create a subset with lobsters at Arroyo Quemado (AQUE) **OR** with a carapace length greater than 70 mm

::: {.callout-important}
## Solution
```{r}
lobsters_aque_large <- lobsters |> 
  filter(site == "AQUE" | size_mm > 70)
```
:::

8. Create a subset that does NOT include observations from Naples Reef (NAPL)

::: {.callout-important}
## Solution
```{r}
no_naples <- lobsters %>% 
  filter(!site == "NAPL")
```

```{r}
no_naples <- lobsters %>% 
  filter(site != "NAPL")
```
:::

9. Find the mean and standard deviation of lobster carapace length, grouped by site

::: {.callout-important}
## Solution
```{r}
mean_carpace_length <- lobsters %>% 
  group_by(site) %>% 
  summarize(mean_size = mean(size_mm, na.rm = TRUE),
            sd_size = sd(size_mm, na.rm = TRUE))
```
:::

10. Find the maximum carapace length by site and month

::: {.callout-important}
## Solution
```{r}
#| message: false
#| warning: false

max_carpace_length <- lobsters %>% 
  group_by(site, month) %>% 
  summarize(max_size = max(size_mm, na.rm = TRUE))
```
:::

11. Use `mutate()` to add, update, new columns:
  - Add a new column that contains lobster carapace length converted to centimeters
  - Update the site column to all lowercase
  - Convert the area column to a character

::: {.callout-important}
## Solution
```{r}
new_lobsters <- lobsters |> 
  mutate(size_cm = size_mm / 10,
         site = tolower(site),
         area = as.character(area))

```
:::

12. Use `case_when()` to add a new column called `size_bin` that contains "small" if carapace size is <= 70 mm, or "large" if it is greater than 70 mm. Check output. 

::: {.callout-important}
## Solution
```{r}
lobsters_size_bin <- lobsters %>% 
  mutate(size_bin = case_when(size_mm <= 70 ~ "small",
                              size_mm > 70 ~ "large"))
```
:::

13. Use `case_when()` to add a new column called `designation` that contains "MPA" if the site is "IVEE" or "NAPL", and "not MPA" for all other outcomes. 

::: {.callout-important}
## Solution
```{r}
mpa_lobsters <- lobsters |> 
  mutate(designation = case_when(site %in% c("IVEE", "NAPL") ~ "MPA", # If true, assign "MPA"
                                 TRUE ~ "not MPA")) # Catch-all; will assign to anything that wasnâ€™t assigned earlier
```
:::